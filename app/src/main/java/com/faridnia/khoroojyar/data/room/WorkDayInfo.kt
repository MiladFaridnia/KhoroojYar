package com.faridnia.khoroojyar.data.room

import androidx.room.Entity
import androidx.room.Index
import androidx.room.PrimaryKey
import java.time.LocalDate
import java.time.LocalTime

@Entity(
    tableName = "WorkDayInfos",
    indices = [Index(value = ["day"], unique = true)] // Enforce uniqueness on the 'day' column
)
data class WorkDayInfo(
    @PrimaryKey(autoGenerate = true)
    val id: Int = 0, // Default value for autogenerated ID
    val day: LocalDate,
    val firstEnterTime: LocalTime?,
    val firstExitTime: LocalTime?,
    val secondEnterTime: LocalTime?,
    val secondExitTime: LocalTime?
) {
    /*@OptIn(ExperimentalMaterial3Api::class)
    fun createWorkDayInfoFromTimePicker(timePickerState: TimePickerState): WorkDayInfo {
        val today = LocalDate.now() // Get today's date
        val selectedTime = timePickerStateToLocalTime(timePickerState) // Create time

        return WorkDayInfo(
            id = 0, // Use 0 for ID, as it will be autogenerated by Room
            day = today,
            firstEnterTime = selectedTime,
            firstExitTime = LocalTime.MIN, // Defaults or other logic if necessary
            secondEnterTime = LocalTime.MIN, // Defaults or other logic if necessary
            secondExitTime = LocalTime.MIN  // Defaults or other logic if necessary
        )
    }*/

   /* @OptIn(ExperimentalMaterial3Api::class)
    private fun timePickerStateToLocalTime(timePickerState: TimePickerState): LocalTime {
        val selectedTime = LocalTime.of(timePickerState.hour, timePickerState.minute) // Create time
        return selectedTime
    }*/
}
